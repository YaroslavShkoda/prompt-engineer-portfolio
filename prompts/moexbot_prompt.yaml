# moexbot_prompt.yaml
# –ü—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò: —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¢–û–ü-10 –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏

meta:
  version: 1.0.0
  author: shkoda_y
  license: MIT
  created: 2025-04-05
  purpose: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ò–ò –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ MOEX –Ω–∞ Python"

project:
  name: MOEXbot
  goal: "–°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –±–æ—Ç–∞-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¢–û–ü-10 –∞–∫—Ü–∏–π –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏"
  requirements:
    - "–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö (–±–µ–∑ API)"
    - "–¶–∏–∫–ª –∞–Ω–∞–ª–∏–∑–∞ ‚Äî –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç"
    - "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ –ø–æ –∫–æ–Ω—Å–µ–Ω—Å—É—Å—É 13/16 –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤"
    - "–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ ‚Äî —Ç—Ä–∏ –±–ª–æ–∫–∞: —Ü–µ–Ω—ã, –∞–Ω–∞–ª–∏–∑, —Å–∏–≥–Ω–∞–ª"
    - "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª –∏ –∫–æ–Ω—Å–æ–ª—å"
    - "–ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å, PEP 8, type hints, —Ç–µ—Å—Ç—ã"

structure:
  root: MOEXbot/
  folders:
    src:
      files:
        - main.py
        - data_parser.py
        - technical_analyzer.py
        - signal_generator.py
        - logger.py
        - __init__.py
    config:
      files:
        - indicators.json
        - strategy.json
    logs:
      files:
        - moexbot.log
    data:
      subfolder: raw/
      files:
        - latest_prices.html
    outputs:
      subfolder: signals/
      files:
        - latest.json
    tests:
      files:
        - test_data_parser.py
        - test_technical_analyzer.py
        - conftest.py
  files:
    - requirements.txt
    - .gitignore
    - LICENSE
    - CHANGELOG.md
    - README.md

specifications:
  language: Python 3.9+
  coding_style:
    code_language: english
    comments_language: russian
    standard: PEP 8
    type_hints: true
    modularity: true
  error_handling: "try/except, validation, graceful degradation"
  paths: "Use pathlib.Path, no hardcoded paths"
  logging:
    module: logging
    format: "%(asctime)s - %(levelname)s - %(message)s"
    level: INFO
    output:
      - console
      - logs/moexbot.log

modules:
  data_parser:
    description: "–ü–∞—Ä—Å–∏–Ω–≥ –¢–û–ü-10 —Ç–∏–∫–µ—Ä–æ–≤ –∏ —Ü–µ–Ω —Å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"
    functions:
      fetch_top10_tickers:
        returns: List[str]
        behavior: "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ—Ç –¢–û–ü-10 –ø–æ –æ–±–æ—Ä–æ—Ç—É, –Ω–µ —Å—Ç–∞—Ç–∏—á–Ω–æ"
      fetch_latest_prices:
        params: tickers: List[str]
        returns: Dict[str, float]
        behavior: "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã —Å —à—É–º–æ–º ¬±2%"
    source: "HTML/CSV ‚Äî —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –±–µ–∑ API"

  technical_analyzer:
    description: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ 16 –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º –Ω–∞ 4 —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞—Ö"
    timeframes: ["15m", "1h", "4h", "1d"]
    priority_timeframe: "4h"
    indicators:
      - type: EMA
        fast: 8
        slow: 21
        role: trend_fast
      - type: EMA
        fast: 21
        slow: 55
        role: trend_medium
      - type: EMA
        fast: 50
        slow: 200
        role: trend_long
      - type: MACD
        fast: 12
        slow: 26
        signal: 9
        role: momentum
      - type: RSI
        period: 14
        overbought: 70
        oversold: 30
        role: strength
      - type: Stochastic
        k: 14
        d: 3
        smooth: 3
        role: strength
      - type: "Williams %R"
        period: 14
        role: strength
      - type: OBV
        role: volume_trend
      - type: "Volume MA"
        period: 20
        role: volume_filter
      - type: ATR
        period: 14
        role: volatility
      - type: "Bollinger Bands"
        period: 20
        stdev: 2
        role: volatility_channel
      - type: "Keltner Channel"
        period: 20
        multiplier: 1.5
        role: volatility_channel
      - type: Ichimoku
        tenkan: 9
        kijun: 26
        senkou_b: 52
        role: trend_sr
      - type: "Pivot Points"
        method: standard
        role: static_sr
      - type: "Fibonacci Retracement"
        lookback: 50
        levels: [0.382, 0.5, 0.618]
        role: dynamic_sr
      - type: ADX
        period: 14
        threshold: 25
        role: trend_strength
    confirmation:
      minimum_agreement: 13
      timeframe_consensus: 4
      volume_confirmation: true
      divergence_check: ["MACD", "RSI", "Stochastic"]
      confluence_threshold: 0.75
    function:
      name: analyze_ticker
      params: symbol: str
      returns: Dict[str, Tuple[int, int, str]]
      description: "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (BUY_count, SELL_count, signal) –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º"

  signal_generator:
    description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–∞ –ø—Ä–∏ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–µ ‚â•13/16 –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤"
    output_format: |
      ============================================================
                –°–¢–û–ò–ú–û–°–¢–¨ –ê–ö–¢–ò–í–û–í

      SBER: 305.50 —Ä—É–±.
      GAZP: 152.80 —Ä—É–±.
      ...

      ============================================================
           –ü–û–ö–ê–ó–ê–ù–ò–Ø –ò–ù–î–ò–ö–ê–¢–û–†–û–í –ò –ò–• –ê–ù–ê–õ–ò–ó

      üìä –¢–û–ü-1: SBER
        ‚Ä¢ 15m: 14/16 BUY, 2/16 SELL ‚Üí üü¢ –°–ò–õ–¨–ù–´–ô –ö–û–ù–°–ï–ù–°–£–°: –ü–û–ö–£–ü–ö–ò
        ‚Ä¢ 1h: 13/16 BUY, 3/16 SELL ‚Üí üü¢ –£—Å—Ç–æ–π—á–∏–≤—ã–π —Ä–æ—Å—Ç
        ‚Ä¢ 4h: 14/16 BUY, 2/16 SELL ‚Üí üü¢ –°–ò–õ–¨–ù–´–ô –ö–û–ù–°–ï–ù–°–£–°
        ‚Ä¢ 1d: 12/16 BUY, 4/16 SELL ‚Üí üü¢ –†–æ—Å—Ç
        ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        üü¢ –£—Å—Ç–æ–π—á–∏–≤—ã–π —Ä–æ—Å—Ç

      ...

      ============================================================
         –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ù–ê–ô–î–ï–ù–ù–û–ú –°–ò–ì–ù–ê–õ–ï

      ‚úÖ –°–ò–ì–ù–ê–õ –ü–û–ö–£–ü–ö–ò: SBER
      –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: 305.50 —Ä—É–±.
      –°—Ç–æ–ø-–ª–æ—Å—Å: 299.39 —Ä—É–±.
      –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: 320.78 —Ä—É–±.
      ============================================================
    function:
      name: generate_signal
      params: analysis: Dict, prices: Dict[str, float]
      returns: str
      behavior: "–§–æ—Ä–º–∏—Ä—É–µ—Ç 3 –±–ª–æ–∫–∞ —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ –∏ –ø–æ–ª–æ—Å–∞–º–∏ ===="

  logger:
    description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞"
    function:
      name: setup_logger
      params: log_file: str = "logs/moexbot.log"
      returns: logging.Logger
      behavior: "–î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ñ–∞–π–ª–∞ –∏ –∫–æ–Ω—Å–æ–ª–∏"

  main:
    description: "–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞. –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ü–∏–∫–ª –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç"
    entry_point: "python -m src.main"
    logic:
      - "–ü–æ–ª—É—á–∏—Ç—å –¢–û–ü-10 —Ç–∏–∫–µ—Ä–æ–≤"
      - "–ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—ã"
      - "–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑ –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–∏–∫–µ—Ä—É"
      - "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∏–≥–Ω–∞–ª"
      - "–ó–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏"
    loop_interval: 900  # seconds

config_files:
  indicators.json:
    path: config/indicators.json
    content: |
      {
        "indicators": [
          { "type": "EMA", "fast": 8, "slow": 21 },
          { "type": "MACD", "fast": 12, "slow": 26, "signal": 9 },
          ...
        ],
        "timeframes": ["15m", "1h", "4h", "1d"],
        "priority_timeframe": "4h"
      }
  strategy.json:
    path: config/strategy.json
    content: |
      {
        "confirmation": { "minimum_agreement": 13 },
        "risk_management": {
          "risk_per_trade": 0.008,
          "risk_reward_ratio": 2.5
        }
      }

tests:
  framework: pytest
  coverage: "‚â• 80%"
  files:
    - test_data_parser.py
    - test_technical_analyzer.py
  examples:
    - |
      def test_fetch_top10_tickers():
          tickers = fetch_top10_tickers()
          assert isinstance(tickers, list)
          assert len(tickers) == 10
    - |
      def test_analyze_ticker():
          result = analyze_ticker("SBER")
          assert "4h" in result
          assert result["4h"][0] >= 0

dependencies:
  requirements.txt: |
    requests==2.31.0
    beautifulsoup4==4.12.3
    pandas==2.2.2
    numpy==1.26.4
    pytest==8.1.1
  .gitignore: |
    __pycache__/
    *.pyc
    logs/moexbot.log
    data/raw/*
    outputs/signals/*
    .env
    .pytest_cache/

final_instruction: |
  –¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø—Ä–æ–º–ø—Ç-–∏–Ω–∂–µ–Ω–µ—Ä.
  –ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ YAML-–ø—Ä–æ–º–ø—Ç–∞ —Å–æ–∑–¥–∞–π –ø–æ–ª–Ω—ã–π –ø—Ä–æ–µ–∫—Ç MOEXbot.
  –ù–∞–ø–∏—à–∏ –≤–µ—Å—å –∫–æ–¥, —Å–æ–±–ª—é–¥–∞–π PEP 8, type hints, –º–æ–¥—É–ª—å–Ω–æ—Å—Ç—å.
  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ‚Äî –Ω–∞ —Ä—É—Å—Å–∫–æ–º.
  –ù–∞—á–Ω–∏ —Å: "–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª YAML-–ø—Ä–æ–º–ø—Ç. –í–æ—Ç –∫–∞–∫ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω MOEXbot..."
